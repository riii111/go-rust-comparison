name: Backend CI
on:
  pull_request_target:
    types: [opened, synchronize]
    paths:
      - "backend/**"
    branches:
      - "develop"
      - "!release/**"
      - "!doc/**"

permissions:
  contents: read
  pull-requests: write # PRのステータス更新に必要

env:
  WORKING_DIRECTORY: backend

jobs:
  lint-and-format:
    name: Lint and Format
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }} # PRの最新コミットを確実に取得
      - name: Setup Golang
        uses: ./.github/actions/setup-golang
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Format Code
        run: go fmt ./...
      - name: Format Import
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          goimports -l -w .
      - name: Lint Code
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60
          working-directory: ${{ env.WORKING_DIRECTORY }}/cmd/app
      - name: Update PR Status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            gh pr review ${{ github.event.pull_request.number }} --approve
          else
            gh pr review ${{ github.event.pull_request.number }} --request-changes -b "CI checks failed. Please fix the issues and try again."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    if: github.event.pull_request.draft == false
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Golang
        uses: ./.github/actions/setup-golang
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Build
        run: go build
        working-directory: ${{ env.WORKING_DIRECTORY }}/cmd/app
